.recommendationsContainer {
  padding: 2rem;
  max-width: 1400px;
  margin: 0 auto;
}

.sectionHeader {
  margin-bottom: 2rem;
}

.sectionHeader h2 {
  color: var(--color-primary);
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
}

.sectionHeader p {
  color: var(--color-text-secondary);
  font-size: 1.1rem;
}

.summaryCards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.summaryCard {
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-lg);
  padding: 1.5rem;
  display: flex;
  align-items: center;
  gap: 1rem;
  transition: all 0.3s ease;
}

.summaryCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(21, 128, 61, 0.15);
}

.summaryIcon {
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 1.5rem;
}

.summaryContent h3 {
  color: var(--color-text-primary);
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.summaryValue {
  color: var(--color-primary);
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0;
}

.filtersSection {
  margin-bottom: 2rem;
}

.filtersSection h3 {
  color: var(--color-text-primary);
  font-size: 1.2rem;
  font-weight: 600;
  margin-bottom: 1rem;
}

.filterButtons {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.filterButton {
  padding: 0.75rem 1.5rem;
  border: 2px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-secondary);
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 500;
}

.filterButton:hover {
  border-color: var(--color-primary);
  color: var(--color-primary);
}

.filterButton.active {
  background: var(--color-primary);
  border-color: var(--color-primary);
  color: white;
}

.recommendationsList {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.recommendationCard {
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-lg);
  padding: 2rem;
  transition: all 0.3s ease;
  position: relative;
}

.recommendationCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(21, 128, 61, 0.15);
}

.recommendationCard.completed {
  background: linear-gradient(135deg, var(--color-surface) 0%, rgba(132, 204, 22, 0.05) 100%);
  border-color: var(--color-success);
  opacity: 0.8;
}

.recommendationHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.headerLeft {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.priorityBadge {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: var(--border-radius-md);
  font-size: 0.9rem;
  font-weight: 600;
}

.highPriority {
  color: #dc2626;
}

.mediumPriority {
  color: #ea580c;
}

.lowPriority {
  color: #65a30d;
}

.categoryBadge {
  padding: 0.5rem 1rem;
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-md);
  font-size: 0.8rem;
  color: var(--color-text-secondary);
  font-weight: 500;
}

.completeButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  transition: all 0.2s ease;
}

.completeButton:hover {
  background: rgba(21, 128, 61, 0.1);
}

.completedIcon {
  color: var(--color-success);
  font-size: 1.5rem;
}

.incompleteIcon {
  width: 24px;
  height: 24px;
  border: 2px solid var(--color-border);
  border-radius: 50%;
  transition: all 0.2s ease;
}

.completeButton:hover .incompleteIcon {
  border-color: var(--color-success);
}

.recommendationContent h3 {
  color: var(--color-text-primary);
  font-size: 1.3rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.description {
  color: var(--color-text-secondary);
  font-size: 1rem;
  margin-bottom: 0.5rem;
  line-height: 1.5;
}

.device {
  color: var(--color-primary);
  font-size: 0.9rem;
  font-weight: 500;
  margin-bottom: 1.5rem;
}

.metricsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.metric {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-md);
}

.metric svg {
  color: var(--color-primary);
  font-size: 1.2rem;
}

.metric > div {
  display: flex;
  flex-direction: column;
}

.metricValue {
  color: var(--color-text-primary);
  font-size: 1.1rem;
  font-weight: 600;
}

.metricLabel {
  color: var(--color-text-secondary);
  font-size: 0.8rem;
}

.implementationInfo {
  display: flex;
  gap: 2rem;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
}

.infoItem {
  display: flex;
  gap: 0.5rem;
}

.infoLabel {
  color: var(--color-text-secondary);
  font-size: 0.9rem;
  font-weight: 500;
}

.infoValue {
  color: var(--color-text-primary);
  font-size: 0.9rem;
  font-weight: 600;
}

.tipsSection {
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-md);
  padding: 1.5rem;
}

.tipsSection h4 {
  color: var(--color-text-primary);
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 1rem;
}

.tipsList {
  list-style: none;
  padding: 0;
  margin: 0;
}

.tipsList li {
  color: var(--color-text-secondary);
  font-size: 0.9rem;
  line-height: 1.5;
  margin-bottom: 0.5rem;
  padding-left: 1.5rem;
  position: relative;
}

.tipsList li::before {
  content: "ðŸ’¡";
  position: absolute;
  left: 0;
  top: 0;
}

/* Responsive Design */
@media (max-width: 768px) {
  .recommendationsContainer {
    padding: 1rem;
  }

  .summaryCards {
    grid-template-columns: 1fr;
  }

  .filterButtons {
    flex-direction: column;
  }

  .filterButton {
    text-align: center;
  }

  .recommendationCard {
    padding: 1.5rem;
  }

  .headerLeft {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .metricsGrid {
    grid-template-columns: 1fr;
  }

  .implementationInfo {
    flex-direction: column;
    gap: 0.5rem;
  }
}
